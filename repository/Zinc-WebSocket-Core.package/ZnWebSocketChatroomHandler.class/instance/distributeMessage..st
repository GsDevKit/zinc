protocol
distributeMessage: message
  "Send message to all client WebSockets that we know."

  lock
    critical: [ 
      webSockets
        do: [ :each | 
          [ 
          each log
            info: [ each asOop printString , ' Sending message: ' , message printString ].
          each sendMessage: message.
          each log info: [ each asOop printString , ' sent message' ] ]
            on: NetworkError
            do: [ :exception | 
              "We can ignore this (instead of #unregister:-ing the offender), 
					since the listener process (see #value:) will do the right thing"
              each log
                debug: [ exception printString , ' in ditributeMessage, ignoring' ] ] ] ]